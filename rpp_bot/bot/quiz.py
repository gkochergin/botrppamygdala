–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—É—é –º–Ω–æ–π –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–≤–∏–∑–∞ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

```python
from django.db import models

class QuizSession(models.Model):
    user_id = models.BigIntegerField()
    question_number = models.IntegerField()
    score = models.IntegerField()

class QuizResults(models.Model):
    user_id = models.BigIntegerField()
    date = models.DateTimeField(auto_now_add=True)
    result = models.IntegerField()

@router.message(Command(commands='startquiz'))
async def start_quiz(message: types.Message):
    user_id = message.from_user.id
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç QuizSession –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∫–≤–∏–∑–∞
    QuizSession.objects.create(user_id=user_id, question_number=0, score=0)
    await message.answer("–¢–µ—Å—Ç –Ω–∞—á–∞—Ç!")
    await quiz_show_question(user_id=user_id, message=message)

async def quiz_show_question(user_id: int, message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∫–≤–∏–∑–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    quiz_session = QuizSession.objects.get(user_id=user_id)
    question_number = quiz_session.question_number
    score = quiz_session.score

    questions_list = api.get_quiz_question_list()
    questions_count = len(questions_list)
    if question_number < questions_count:
        question_text = api.get_quiz_question_list()[question_number]['question']
        message_text = f"–í–æ–ø—Ä–æ—Å {question_number + 1} –∏–∑ {questions_count}\n\n{question_text}"

        # —Å–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –æ—á–∫–æ–≤ –∏ –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞
        yes_btn_data = f"yes,{question_number + 1},{score + 1}"
        no_bt_data = f"no,{question_number + 1},{score}"
        buttons_list = [
            [InlineKeyboardButton(text="–î–∞", callback_data=yes_btn_data),
             InlineKeyboardButton(text="–ù–µ—Ç", callback_data=no_bt_data)]
        ]

        kb = InlineKeyboardBuilder(markup=buttons_list)

        await message.answer(text=message_text, reply_markup=kb.as_markup())
    else:
        if score <= 2:
            result_text = "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤:\n–£ –≤–∞—Å –≤—Å—ë —Ö–æ—Ä–æ—à–æ."
        else:
            result_text = "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤:\n–í—Å—ë –ø–ª–æ—Ö–æ, –Ω–∞–¥–æ –ª–µ—á–∏—Ç—å—Å—è. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É."
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        QuizResults.objects.create(user_id=user_id, result=score)
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∫–≤–∏–∑–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        quiz_session.delete()
        # —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await message.answer(f"–ö–æ–ª-–≤–æ '–î–ê' –æ—Ç–≤–µ—Ç–æ–≤: {score}.\n\n{result_text}")

@router.callback_query(lambda c: c.data.startswith('yes') or c.data.startswith('no'))
async def process_callback(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∫–≤–∏–∑–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    quiz_session = QuizSession.objects.get(user_id=user_id)
    question_number = quiz_session.question_number
    score = quiz_session.score

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∫–≤–∏–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    _, new_question_number, new_score = map(int, callback_query.data.split(','))
    quiz_session.question_number = new_question_number
    quiz_session.score = new_score
    quiz_session.save()

    await quiz_show_question(user_id=user_id, message=callback_query.message)
```
–í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–µ–º –¥–≤–µ –Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ `QuizSession` –∏ `QuizResults` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∫–≤–∏–∑–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∫–≤–∏–∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –ú—ã —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω—è–µ–º –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã `startquiz` –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ `callback_query`, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤ `QuizSession` –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∫–≤–∏–∑–∞ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞.

–Ø –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –∫–æ–¥ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–≤–∏–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. üòä